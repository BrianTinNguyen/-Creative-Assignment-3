<section class="content-container">
    <link rel="stylesheet" href="/css/posts.css">

    <button id="dark-mode-toggle">Toggle Dark Mode</button>

    {{#if loggedIn}}
        <section class="post-form">
            <form action="/posts" method="POST">
                <label for="title">Title:</label>
                <input type="title" id="title" name="title" required>

                <label for="content">Content:</label>
                <input type="text" id="content" name="content" required>

                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">😀</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        {{#if posts.length}}
            <ul>
                {{#each posts}}
                    
                        <div class='postcontainer'>
                            <div class='userone'>
                                {{username}} 
                            </div>
                            <div class='titles'>
                                {{title}} 
                            </div>
                            <div class='contentone'>
                                {{content}}
                            </div>
                            <div class='likestime'>
                                {{timestamp}}
                            </div>
                            <div>
                                <button type="button" class="post-button">Like</button> {{likes}}
                            </div>
                            <div class='comments'>

                                    <!-- Comment form -->
                                {{#if ../loggedIn}}
                                    <form action="/comment/{{id}}" method="POST" class="comments">
                                        <label for="comment">Comment:</label>
                                        <input type="text" id="comment" name="comment" required>
                                        <button type="submit" class="post-button">Comment</button>
                                    </form>
                                {{/if}}

                                {{#if ../comments.length}}
                                    {{#each ../comments}}
                                            <div class='postcontainer'>
                                            <div>
                                                {{username}} 
                                            </div>
                                            <div class='contentone'>
                                                {{comment}} 
                                            </div>
                                            <div>
                                                {{timestamp}}
                                            </div>
                                            </div>
                                    {{/each}}
                                {{else}}
                                    <p>No comments yet.</p>
                                {{/if}}
                            </div>
                        </div>       
                {{/each}}
            </ul>
        {{else}}
            <p>No posts available. Be the first to post something!</p>
        {{/if}}
    </section>
</section>

<script>
    let allEmojis = [];  // Global list to hold all emojis

    function toggleEmojiPanel() {
        const container = document.getElementById('emoji-container');
        container.style.display = container.style.display === 'none' ? 'block' : 'none';

        if (container.style.display === 'block' && allEmojis.length === 0) {
            fetchEmojis();
        }
    }



    function fetchEmojis() {
        // Fetch a set of emojis from an API or a local file
        // For demonstration, we'll use a static set of emojis
        allEmojis = [
            { character: '😀', slug: 'grinning-face' },
            { character: '😃', slug: 'grinning-face-with-big-eyes' },
            { character: '😄', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😆', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😅', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😂', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🤣', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🥹', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😊', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😇', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🙂', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🙃', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😉', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😌', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😍', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🥰', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😘', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😙', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😎', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😡', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😈', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😱', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🥶', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😴', slug: 'grinning-face-with-smiling-eyes' },
            { character: '👍', slug: 'grinning-face-with-smiling-eyes' },
            { character: '👎', slug: 'grinning-face-with-smiling-eyes' },
            { character: '💩', slug: 'grinning-face-with-smiling-eyes' },
            { character: '💀', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🤡', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🤢', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🤮', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😡', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😵', slug: 'grinning-face-with-smiling-eyes' },
            { character: '😵‍💫', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🤗', slug: 'grinning-face-with-smiling-eyes' },
            { character: '👊', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🫣', slug: 'grinning-face-with-smiling-eyes' },
            { character: '🫣', slug: 'grinning-face-with-smiling-eyes' },
            // Add more emojis here or fetch from an API
        ];
        displayEmojis(allEmojis);
    }

    function displayEmojis(emojis, limit = 200) {
        const container = document.getElementById('emoji-grid');
        container.innerHTML = '';  // Clear previous results
        if (Array.isArray(emojis) && emojis.length > 0) {
            emojis.slice(0, limit).forEach(emoji => {
                const emojiElement = document.createElement('span');
                emojiElement.textContent = emoji.character;
                emojiElement.title = emoji.slug;  // Showing the emoji name on hover
                emojiElement.style.cursor = 'pointer';
                emojiElement.onclick = () => insertEmoji(emoji.character);
                container.appendChild(emojiElement);
            });
        } else {
            container.textContent = 'No emojis found. Try a different search!';
        }
    }

    function searchEmojis() {
        const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
        const filteredEmojis = allEmojis.filter(emoji =>
            emoji.slug.toLowerCase().includes(searchTerm)
        );
        displayEmojis(filteredEmojis);
    }

    function insertEmoji(emoji) {
        const contentInput = document.getElementById('content');
        const startPos = contentInput.selectionStart;
        const endPos = contentInput.selectionEnd;
        contentInput.value = contentInput.value.substring(0, startPos) + emoji + contentInput.value.substring(endPos);
        contentInput.selectionStart = contentInput.selectionEnd = startPos + emoji.length;
        contentInput.focus();  // Keep focus on the textarea
    }


    // Toggle dark mode
function toggleDarkMode() {
    const body = document.body;
    body.classList.toggle('dark-mode');
}

// Function to handle dark mode toggle button click
document.getElementById('dark-mode-toggle').addEventListener('click', function() {
    toggleDarkMode();
});
</script>
